{"version":3,"file":"static/js/512.bbfa2dda.chunk.js","mappings":"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","sources":["components/Contacts/Buttons/ButtonAdd/ButtonAdd.jsx","redux/contacts/selectors.js","redux/filter/selectors.js","components/Contacts/TableContacts/TableCellActions/TableCellActions.jsx","components/Contacts/TableContacts/MyTableRow/MyTableRow.jsx","components/Contacts/TableContacts/TableContacts.jsx","components/Contacts/Contacts.styled.js","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","pages/Contacts.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport { setModalStatus, modalsType } from 'redux/modals/slice';\nimport { newContact } from 'redux/contact/slice';\n\nexport function ButtonAdd() {\n  const dispatch = useDispatch();\n\n  return (\n    <Button\n      variant=\"outlined\"\n      sx={{ marginBottom: 2, marginTop: 2 }}\n      startIcon={<AddIcon />}\n      onClick={() => {\n        dispatch(newContact());\n        dispatch(setModalStatus(modalsType.CONTACTS));\n      }}\n    >\n      Add contact\n    </Button>\n  );\n}\n","import { selectFilter } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n\n  const filterL = filter.toLowerCase().trim();\n  return {\n    ...contacts,\n    items: contacts.items.filter(elem =>\n      elem.name.toLowerCase().includes(filterL)\n    ),\n  };\n};\n\nexport const selectLoading = state => state.contacts.isLoading;\n","export const selectFilter = state => state.filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@mui/material/TableCell';\n//\nimport IconButton from '@mui/material/IconButton';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\nimport { fetchContact } from 'redux/contact/slice';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { fetchContactModal, modalsType } from 'redux/modals/slice';\n\nexport function TableCellActions({ id }) {\n  const dispatch = useDispatch();\n  const { items } = useSelector(selectContacts);\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleEditContact = () => {\n    const contact = items.filter(elem => elem.id === id)[0];\n    dispatch(fetchContact(contact));\n    dispatch(fetchContactModal(modalsType.CONTACTS));\n  };\n\n  return (\n    <TableCell align=\"center\">\n      <IconButton aria-label=\"edit\" onClick={handleEditContact}>\n        <EditIcon />\n      </IconButton>\n      <IconButton aria-label=\"delete\" onClick={handleDeleteContact}>\n        <DeleteForeverIcon />\n      </IconButton>\n    </TableCell>\n  );\n}\n\nTableCellActions.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport { TableCellActions } from '../TableCellActions/TableCellActions';\n\nexport function MyTableRow({ row }) {\n  return (\n    <TableRow hover sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n      <TableCell component=\"th\" scope=\"row\">\n        {row.name}\n      </TableCell>\n      <TableCell>{row.number}</TableCell>\n      <TableCellActions id={row.id} />\n    </TableRow>\n  );\n}\n\nMyTableRow.propTypes = {\n  row: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import React from 'react';\nimport { styled } from '@mui/material';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n//\nimport { MyTableRow } from './MyTableRow/MyTableRow';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\n\nconst StyledTableCell = styled(TableCell)(() => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: '#e8eaed',\n    fontSize: 18,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 16,\n  },\n}));\n\nexport function TableContacts() {\n  const { items } = useSelector(selectVisibleContacts);\n\n  return (\n    <Paper>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Contact name</StyledTableCell>\n              <StyledTableCell>Phone number</StyledTableCell>\n              <StyledTableCell align=\"center\">Actions</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.map(row => (\n              <MyTableRow key={row.id} row={row} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const WraperContacts = styled.div`\n  margin: 0 auto;\n  width: 700px;\n`;\n","import React from 'react';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Paper\n      component=\"form\"\n      sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 400 }}\n    >\n      <InputBase\n        sx={{ ml: 1, flex: 1 }}\n        placeholder=\"Search contacts\"\n        inputProps={{ 'aria-label': 'search contacts' }}\n        onChange={handleChangeFilter}\n      />\n      <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { ButtonAdd } from './Buttons/ButtonAdd/ButtonAdd';\nimport { TableContacts } from './TableContacts/TableContacts';\nimport { WraperContacts } from './Contacts.styled';\nimport Filter from 'components/Filter/Filter';\nimport { Box } from '@mui/material';\n\nexport function Contacts() {\n  return (\n    <WraperContacts>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <Filter />\n        <ButtonAdd />\n      </Box>\n      <TableContacts />\n    </WraperContacts>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport authSelectors from 'redux/auth/selectors';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const { email } = useSelector(authSelectors.getUser);\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    if (email !== null) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, email]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Contacts>\n        <div>{isLoading && 'Request in progress...'}</div>\n      </Contacts>\n    </>\n  );\n}\n"],"names":["ButtonAdd","dispatch","useDispatch","Button","variant","sx","marginBottom","marginTop","startIcon","Add","onClick","newContact","setModalStatus","modalsType","selectContacts","state","contacts","selectVisibleContacts","filter","selectFilter","filterL","toLowerCase","trim","items","elem","name","includes","selectLoading","isLoading","TableCellActions","id","useSelector","TableCell","align","IconButton","contact","fetchContact","fetchContactModal","Edit","deleteContact","DeleteForever","MyTableRow","row","TableRow","hover","border","component","scope","number","StyledTableCell","styled","tableCellClasses","backgroundColor","fontSize","TableContacts","Paper","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableBody","map","WraperContacts","Filter","p","display","alignItems","width","InputBase","ml","flex","placeholder","inputProps","onChange","e","setFilter","target","value","type","Search","Contacts","Box","justifyContent","Tasks","email","authSelectors","useEffect","fetchContacts","Helmet"],"sourceRoot":""}