{"version":3,"file":"static/js/481.595026c5.chunk.js","mappings":"8QAAaA,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,OAAV,E,8BCErBC,EAAgBC,EAAAA,KAAaC,MAAM,CAC9CC,KAAMF,EAAAA,KACHG,WACAC,QACC,yHACA,0IAEJC,OAAQL,EAAAA,KACLG,WACAC,QACC,6EACA,kG,SCuEN,EAxEoB,WAClB,IAAME,GAAWC,EAAAA,EAAAA,MACXT,GAAUU,EAAAA,EAAAA,IAAYZ,GAiB5B,GAAmCa,EAAAA,EAAAA,IAAQ,CACzCC,UAAUC,EAAAA,EAAAA,GAAYZ,KADhBa,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAQlB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIlB,EACb,GAAE,CAACA,KAGF,UAACmB,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,EAAGC,MAAO,UAEpCC,YAAU,EACVC,aAAa,MACbC,SAAUX,GA/BS,SAAAY,GACrBV,QAAQC,IAAI,UACZS,EAAMC,iBACN,MAAyBD,EAAME,cAAcC,SAArC1B,EAAR,EAAQA,KAAMG,EAAd,EAAcA,OAEK,KAAfP,EAAQ+B,GACVvB,GACEwB,EAAAA,EAAAA,IAAa,CAAED,GAAI/B,EAAQ+B,GAAI3B,KAAMA,EAAK6B,MAAO1B,OAAQA,EAAO0B,SAGlEzB,GAAS0B,EAAAA,EAAAA,IAAW,CAAE9B,KAAMA,EAAK6B,MAAO1B,OAAQA,EAAO0B,SAEzDzB,GAAS2B,EAAAA,EAAAA,IAAeC,EAAAA,GAAAA,MACzB,IAWC,WASE,SAACC,EAAA,GAAD,QACEN,GAAG,OACHO,MAAM,eACNC,QAAQ,WACRC,WAAS,EACTC,aAAczC,EAAQI,MAClBU,EAAS,WAEf,SAACuB,EAAA,EAAD,CACEN,GAAG,SACHO,MAAM,eACNC,QAAQ,WACRE,aAAczC,EAAQO,UAExB,SAACmC,EAAA,EAAD,CACEH,QAAQ,WACRlB,GAAI,CAAEsB,aAAc,EAAGC,UAAW,GAClCC,KAAK,SAHP,mBAOA,SAACH,EAAA,EAAD,CACEH,QAAQ,WACRlB,GAAI,CAAEsB,aAAc,EAAGC,UAAW,GAClCE,QAAS,WACP7B,QAAQC,IAAI,QACZV,GAAS2B,EAAAA,EAAAA,IAAeC,EAAAA,GAAAA,MACzB,EANH,oBAYL,C","sources":["redux/contact/selectors.js","services/yup.js","components/Contacts/ContactInfo/ContactInfo.jsx"],"sourcesContent":["export const selectContact = state => state.contact;\n","import * as Yup from 'yup';\n\nexport const ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .required()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: Yup.string()\n    .required()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n","import React, { useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { modalsType, setModalStatus } from 'redux/modals/slice';\nimport { addContact, patchContact } from 'redux/contacts/operation';\nimport { selectContact } from 'redux/contact/selectors';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { ContactSchema } from 'services/yup';\n\nconst ContactInfo = () => {\n  const dispatch = useDispatch();\n  const contact = useSelector(selectContact);\n\n  const handleSubmitMy = event => {\n    console.log('submit');\n    event.preventDefault();\n    const { name, number } = event.currentTarget.elements;\n\n    if (contact.id !== '') {\n      dispatch(\n        patchContact({ id: contact.id, name: name.value, number: number.value })\n      );\n    } else {\n      dispatch(addContact({ name: name.value, number: number.value }));\n    }\n    dispatch(setModalStatus(modalsType.NULL));\n  };\n\n  const { register, handleSubmit } = useForm({\n    resolver: yupResolver(ContactSchema),\n  });\n\n  useEffect(() => {\n    console.log(contact);\n  }, [contact]);\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '380px' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(handleSubmitMy)}\n    >\n      <TextField\n        id=\"name\"\n        label=\"Contact name\"\n        variant=\"outlined\"\n        autoFocus\n        defaultValue={contact.name}\n        {...register('name')}\n      />\n      <TextField\n        id=\"number\"\n        label=\"Phone number\"\n        variant=\"outlined\"\n        defaultValue={contact.number}\n      />\n      <Button\n        variant=\"outlined\"\n        sx={{ marginBottom: 2, marginTop: 2 }}\n        type=\"submit\"\n      >\n        Save\n      </Button>\n      <Button\n        variant=\"outlined\"\n        sx={{ marginBottom: 2, marginTop: 2 }}\n        onClick={() => {\n          console.log('Exit');\n          dispatch(setModalStatus(modalsType.NULL));\n        }}\n      >\n        Exit\n      </Button>\n    </Box>\n  );\n};\n\nexport default ContactInfo;\n"],"names":["selectContact","state","contact","ContactSchema","Yup","shape","name","required","matches","number","dispatch","useDispatch","useSelector","useForm","resolver","yupResolver","register","handleSubmit","useEffect","console","log","Box","component","sx","m","width","noValidate","autoComplete","onSubmit","event","preventDefault","currentTarget","elements","id","patchContact","value","addContact","setModalStatus","modalsType","TextField","label","variant","autoFocus","defaultValue","Button","marginBottom","marginTop","type","onClick"],"sourceRoot":""}